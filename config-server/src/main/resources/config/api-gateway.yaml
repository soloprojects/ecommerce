server:
  port: 8222

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

management:
  tracing:
    sampling:
      probability: 1.0

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods:
              - POST
              - GET
              - OPTIONS
              - PUT
              - DELETE
      discovery:
        locator:
          enabled: true
      routes:
        - id: shopping-cart
          uri: lb://shopping-cart
          predicates:
            - Path=/api/v1/shopping-cart/**
          filters:
            - name: CircuitBreaker
              args:
                name: book-inventory
                fallbackuri: forward:/CartServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: book-inventory
          uri: lb://book-inventory
          predicates:
            - Path=/api/v1/book-inventory/**
          filters:
            - name: CircuitBreaker
              args:
                name: book-inventory
                fallbackuri: forward:/BookServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/v1/payment-service/**
          filters:
            - name: CircuitBreaker
              args:
                name: book-inventory
                fallbackuri: forward:/PaymentServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
  # Resilience4j Circuit Breaker Configuration
  resilience4j.circuitbreaker:
    instances:
      exampleCircuitBreaker:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 5
        ring-buffer-size-in-half-open-state: 3
        failure-rate-threshold: 50
        wait-duration-in-open-state: 1000ms

  # Resilience4j Rate Limiter Configuration
  resilience4j.ratelimiter:
    instances:
      appRateLimiter:
        limit-for-period: 10
        timeout-duration: 1000ms
        limit-refresh-period: 1000ms